input {
	beats {
		port => "5044"
		ssl_enabled => true
		ssl_certificate_authorities => ["/usr/share/logstash/config/certs/ca/ca.crt"]
		ssl_certificate => "/usr/share/logstash/config/certs/logstash/logstash.crt"
		ssl_key => "/usr/share/logstash/config/certs/logstash/logstash.key"
		ssl_client_authentication => "required"
	}
}
# The filter part of this file is commented out to indicate that it is
# optional.
filter {
	if "app" in [tags] {
		# # this is app filter
		json {
			source => "message"
		}
		date {
			match => [ "time", "UNIX_MS"]
			target => "@timestamp"
		}
	}
	else if "es01" in [tags] {
		# this is es01 filter
		grok {
			match => { "message" => "^[^|]+\s+\|\s+(?<jsonstr>\{.*\})$" }
		}
		mutate {
			gsub => [
			"jsonstr", '\\\\"', '"'
			]
		}
		json {
			source => "jsonstr"
			target => "esjson"
		}
	}
}
output {
	if "app" in [tags] {
		elasticsearch {
			hosts => ["https://es01:9200"]
			user => "elastic"
			password => "${ELASTIC_PASSWORD}"
			ssl_certificate_authorities => ["/usr/share/logstash/config/certs/ca/ca.crt"]
			data_stream => true
			data_stream_type => "logs"
			data_stream_dataset => "logstash_app"
			data_stream_namespace => "default"
			codec => json
		}
	}
	else if "es01" in [tags] {
		elasticsearch {
			hosts => ["https://es01:9200"]
			user => "elastic"
			password => "${ELASTIC_PASSWORD}"
			ssl_certificate_authorities => ["/usr/share/logstash/config/certs/ca/ca.crt"]
			data_stream => true
			data_stream_type => "logs"
			data_stream_dataset => "logstash_es"
			data_stream_namespace => "default"
			codec => json
		}
	}
	stdout { codec => rubydebug }
}